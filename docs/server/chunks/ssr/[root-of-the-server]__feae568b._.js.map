{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///Users/joyejin/Documents/GitHub/jjine.github.io/src/app/project/data/projects-content.ts"],"sourcesContent":["// src/app/project/data/projects-content.ts\nimport fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\n\nexport interface Project {\n  id: string\n  title: string\n  description: string\n  excerpt: string\n  category: string\n  year: string\n  duration: string\n  team: string[]\n  tags: string[]\n  images: string[]\n  liveUrl?: string\n  githubUrl?: string\n  featured: boolean\n  // content는 별도 파일에서 가져옴\n}\n\nexport const projects: Project[] = [\n  {\n    id: '1',\n    title: 'E-commerce Platform Redesign',\n    description: '사용자 경험을 개선한 이커머스 플랫폼 리디자인 프로젝트',\n    excerpt: '복잡한 이커머스 플랫폼을 사용자 중심으로 재설계하여 전환율을 35% 향상시킨 프로젝트입니다.',\n    category: 'UX/UI Design',\n    year: '2024',\n    duration: '3개월',\n    team: ['UX Designer', 'Frontend Developer', 'Product Manager'],\n    tags: ['Figma', 'React', 'TypeScript', 'User Research', 'Prototyping'],\n    images: ['/images/project-1-hero.jpg', '/images/project-1-process.jpg'],\n    liveUrl: 'https://example.com',\n    githubUrl: 'https://github.com/example/project',\n    featured: true,\n  },\n  {\n    id: '2',\n    title: 'Mobile Banking App',\n    description: '직관적이고 안전한 모바일 뱅킹 애플리케이션 디자인',\n    excerpt: '복잡한 금융 서비스를 간단하고 안전하게 만든 차세대 모바일 뱅킹 앱입니다.',\n    category: 'Mobile Design',\n    year: '2024',\n    duration: '4개월',\n    team: ['Mobile Designer', 'iOS Developer', 'Android Developer', 'Security Expert'],\n    tags: ['Mobile', 'Fintech', 'UX', 'Security', 'React Native'],\n    images: ['/images/project-2-hero.jpg', '/images/project-2-screens.jpg'],\n    liveUrl: 'https://app.example.com',\n    githubUrl: '',\n    featured: true,\n  },\n  {\n    id: '3',\n    title: 'Brand Identity System',\n    description: '스타트업을 위한 일관성 있는 브랜드 아이덴티티 시스템 구축',\n    excerpt: '브랜드의 핵심 가치를 시각적으로 표현한 포괄적인 아이덴티티 시스템입니다.',\n    category: 'Branding',\n    year: '2023',\n    duration: '2개월',\n    team: ['Brand Designer', 'Graphic Designer', 'Marketing Manager'],\n    tags: ['Branding', 'Visual Identity', 'Guidelines', 'Logo Design'],\n    images: ['/images/project-3-hero.jpg'],\n    featured: false,\n  },\n  {\n    id: '4',\n    title: 'Design System Library',\n    description: '확장 가능한 디자인 시스템과 컴포넌트 라이브러리 개발',\n    excerpt: '개발 효율성과 디자인 일관성을 위한 포괄적인 디자인 시스템입니다.',\n    category: 'Design System',\n    year: '2023',\n    duration: '5개월',\n    team: ['Design System Lead', 'Frontend Developer', 'UX Designer'],\n    tags: ['Design System', 'Storybook', 'Components', 'Documentation'],\n    images: ['/images/project-4-hero.jpg'],\n    featured: false,\n  },\n  {\n    id: '5',\n    title: 'Healthcare Dashboard',\n    description: '의료진을 위한 직관적인 환자 관리 대시보드 설계',\n    excerpt: '복잡한 의료 데이터를 한눈에 파악할 수 있는 직관적인 대시보드입니다.',\n    category: 'Dashboard Design',\n    year: '2023',\n    duration: '3개월',\n    team: ['UX Designer', 'Data Analyst', 'Healthcare Expert'],\n    tags: ['Healthcare', 'Dashboard', 'Data Visualization', 'UX Research'],\n    images: ['/images/project-5-hero.jpg'],\n    featured: false,\n  },\n  {\n    id: '6',\n    title: 'Educational Platform',\n    description: '온라인 학습을 위한 인터랙티브 교육 플랫폼 개발',\n    excerpt: '학습자 중심의 맞춤형 교육 경험을 제공하는 온라인 플랫폼입니다.',\n    category: 'EdTech',\n    year: '2022',\n    duration: '6개월',\n    team: ['Product Designer', 'Full-stack Developer', 'Education Specialist'],\n    tags: ['Education', 'Interactive', 'Learning', 'Gamification'],\n    images: ['/images/project-6-hero.jpg'],\n    featured: false,\n  }\n]\n\n// 헬퍼 함수들\nexport function getProject(id: string): Project | undefined {\n  return projects.find(project => project.id === id)\n}\n\nexport function getAllProjects(): Project[] {\n  return projects\n}\n\nexport function getFeaturedProjects(): Project[] {\n  return projects.filter(project => project.featured)\n}\n\nexport function getProjectsByCategory(category: string): Project[] {\n  if (category === 'All') return projects\n  return projects.filter(project => project.category === category)\n}\n\nexport function getAllCategories(): string[] {\n  const categories = ['All', ...new Set(projects.map(project => project.category))]\n  return categories\n}\n\n// 정적 빌드를 위한 프로젝트 ID 목록 반환\nexport function getAllProjectIds() {\n  return projects.map(project => ({ id: project.id }))\n}\n\n// 마크다운 파일에서 프로젝트 콘텐츠를 가져오는 함수\nexport function getProjectContent(id: string): string {\n  try {\n    const contentDir = path.join(process.cwd(), 'src/app/project/data/content')\n    const filePath = path.join(contentDir, `project-${id}.md`)\n    \n    if (!fs.existsSync(filePath)) {\n      return '프로젝트 내용을 찾을 수 없습니다.'\n    }\n    \n    const fileContent = fs.readFileSync(filePath, 'utf8')\n    const { content } = matter(fileContent)\n    \n    return content\n  } catch (error) {\n    console.error(`Error reading project ${id}:`, error)\n    return '프로젝트 내용을 불러올 수 없습니다.'\n  }\n}\n\n// 마크다운 파일에서 메타데이터도 함께 가져오는 함수 (옵션)\nexport function getProjectWithContent(id: string): (Project & { content: string }) | null {\n  try {\n    const project = getProject(id)\n    if (!project) return null\n    \n    const content = getProjectContent(id)\n    return { ...project, content }\n  } catch (error) {\n    console.error(`Error getting project with content ${id}:`, error)\n    return null\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///Users/joyejin/Documents/GitHub/jjine.github.io/src/app/project/%5Bid%5D/ProjectDetailClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/project/[id]/ProjectDetailClient.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/project/[id]/ProjectDetailClient.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgT,GAC7U,8EACA","debugId":null}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///Users/joyejin/Documents/GitHub/jjine.github.io/src/app/project/%5Bid%5D/ProjectDetailClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/project/[id]/ProjectDetailClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/project/[id]/ProjectDetailClient.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4R,GACzT,0DACA","debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///Users/joyejin/Documents/GitHub/jjine.github.io/src/app/project/%5Bid%5D/page.tsx"],"sourcesContent":["// src/app/project/[id]/page.tsx (서버 컴포넌트)\nimport { notFound } from 'next/navigation'\nimport { getProject, getProjectContent, getAllProjectIds } from '../data/projects-content'\nimport ProjectDetailClient from './ProjectDetailClient'\n\ninterface ProjectDetailPageProps {\n  params: Promise<{\n    id: string\n  }>\n}\n\n// 정적 빌드를 위한 generateStaticParams 함수 - 자동으로 모든 프로젝트 ID 반환\nexport async function generateStaticParams() {\n  return getAllProjectIds()\n}\n\nexport default async function ProjectDetailPage({ params }: ProjectDetailPageProps) {\n  const { id } = await params\n  \n  const project = getProject(id)\n  if (!project) {\n    notFound()\n  }\n\n  const content = getProjectContent(id)\n\n  return <ProjectDetailClient project={project} content={content} />\n}"],"names":[],"mappings":"AAAA,0CAA0C;;;;;;AAC1C;AAAA;AACA;AACA;;;;;AASO,eAAe;IACpB,OAAO,CAAA,GAAA,oJAAA,CAAA,mBAAgB,AAAD;AACxB;AAEe,eAAe,kBAAkB,EAAE,MAAM,EAA0B;IAChF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IAErB,MAAM,UAAU,CAAA,GAAA,oJAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,MAAM,UAAU,CAAA,GAAA,oJAAA,CAAA,oBAAiB,AAAD,EAAE;IAElC,qBAAO,8OAAC,uJAAA,CAAA,UAAmB;QAAC,SAAS;QAAS,SAAS;;;;;;AACzD","debugId":null}}]
}